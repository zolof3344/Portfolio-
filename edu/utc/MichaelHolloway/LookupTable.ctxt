#BlueJ class context
comment0.params=
comment0.target=LookupTable()
comment1.params=key\ associatedValue
comment1.target=void\ set(java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Sets\ a\ lookup\ table\ associated\ value\ and\ key\r\n\ Use\ (@link\ LookupTable()\ to\ create\ a\ new\ LookupTable)\r\n\ @param\ key\ String\ that\ is\ being\ used\ as\ the\ first\ value\ or\ "key"\ to\ the\ second\ value\r\n\ @param\ associatedValue\ Value\ that\ is\ associated\ with\ the\ key\ value\ entered.\ The\ pair\ stays\ together\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ method\ returns\ nothing\r\n
comment2.params=key
comment2.target=java.lang.String\ get(java.lang.String)
comment2.text=\r\n\ This\ get\ method\ gets\ a\ string's\ associated\ value\ by\ taking\ the\ key\ as\ input.\r\n\r\n@param\ key\ The\ key\ of\ who's\ associated\ value\ the\ user\ would\ like\ to\ recieve\ as\ output.\r\n@return\ returns\ the\ keys\ associated\ value,\ or\ null\ if\ there\ is\ none.\ WARNING\ this\ method\ is\ case\ sensitive.\ \r\n
comment3.params=
comment3.target=java.lang.String\ printAll()
comment3.text=\r\n\ This\ method\ prints\ all\ keys\ and\ their\ associate\ values\r\n\ \r\n\ \r\n\ @return\ This\ method\ returns\ all\ the\ keys\ and\ their\ associat\ values\ or\ if\ there\ is\ none\ it\ returns\ null.\ \r\n
comment4.params=
comment4.target=java.util.ArrayList\ getKeys()
comment4.text=\ \r\n\ This\ Method\ Returns\ the\ keys\ in\ Array\ form\ for\ the\ entire\ Lookup\ Table\\\r\n\ @return\ This\ method\ returns\ all\ the\ keys\ in\ ArrayList\ form.\r\n
numComments=5
